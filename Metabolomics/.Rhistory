#new.Value <- as.vector(sapply(test1, function(x) NA_function(x$Fraction)))
MID$Fraction[is.na(MID$Fraction)] <- 0
# Anova analysis instead of Ttest
data8=split(MID, MID[,c(3,1)], drop=TRUE)
#ANOVA=sapply(data8, function(x) {if(sum(x$Fraction, na.rm=T)==0) return(NA) else {anova(aov(x$Fraction~x$Condition))$Pr[1]}})
ANOVA=suppressWarnings(sapply(data8, function(x) anova(aov(x$Fraction~x$Condition))$Pr[1]))
data3 <- MID %>%
spread(Exp, Fraction) %>%
inner_join(label, .) %>%
arrange(Name, Iso)
#add indicator of significance
data3$ANOVA=rep(ANOVA,each=length(unique(info$Condition)))
for (i in 1:nrow(data3)){
if (data3$ANOVA[i] == "NaN") data3$Sig[i]=""
else if (data3$ANOVA[i] <= 0.001) data3$Sig[i]="***"
else if (data3$ANOVA[i] <= 0.01) data3$Sig[i]="**"
else if (data3$ANOVA[i] <= 0.05) data3$Sig[i]="*"
else data3$Sig[i]=""
}
write.csv(data3, file="Isotopomer data.csv", row.names=FALSE)
save(data3, file='data3.rdata')
data_labeled <- data3 %>%
select(Name, KEGG.ID, Condition, Iso, starts_with('MID')) %>%
filter(Iso=='M0') %>%
gather(Exp, Value, -Name, -KEGG.ID, -Condition, -Iso) %>%
mutate(Labeled=(1-Value/100)*100) %>%
group_by(Name, Condition) %>%
mutate(Norm_Av=mean(Labeled, na.rm=T),
Norm_Std=sd(Labeled, na.rm=T),
CV=Norm_Std/Norm_Av) %>%
select(-Iso, -Value)
data_labeled$Exp <- gsub('MID','Labeled', data_labeled$Exp)
data8=split(data_labeled, data_labeled[,1])
ANOVA=suppressWarnings(sapply(data8, function(x) anova(aov(x$Labeled~x$Condition))$Pr[1]))
ANOVA=rep(ANOVA,1,each=length(unique(info$Condition)))
data_labeled <- spread(data_labeled, Exp, Labeled)
data_labeled <- cbind(data_labeled, ANOVA, 'Sig'=NA) %>%
ungroup()
for (i in 1:nrow(data_labeled)){
if (data_labeled$ANOVA[i] == "NaN") data_labeled$Sig[i]=""
else if (data_labeled$ANOVA[i] <= 0.001) data_labeled$Sig[i]="***"
else if (data_labeled$ANOVA[i] <= 0.01) data_labeled$Sig[i]="**"
else if (data_labeled$ANOVA[i] <= 0.05) data_labeled$Sig[i]="*"
else data_labeled$Sig[i]=""
}
write.csv(data_labeled, 'labeled data.csv', row.names=F)
save(data_labeled, file='data_labeled.rdata')
data_labeled <- data3 %>%
select(Name, KEGG.ID, Condition, Iso, starts_with('MID')) %>%
filter(Iso=='M0') %>%
gather(Exp, Value, -Name, -KEGG.ID, -Condition, -Iso) %>%
mutate(Labeled=(1-Value/100)*100) %>%
group_by(Name, Condition) %>%
mutate(Norm_Av=mean(Labeled, na.rm=T),
Norm_Std=sd(Labeled, na.rm=T),
CV=Norm_Std/Norm_Av) %>%
select(-Iso, -Value) %>%
ungroup()
data_labeled$Exp <- gsub('MID','Labeled', data_labeled$Exp)
data8=split(data_labeled, data_labeled[,1])
ANOVA=suppressWarnings(sapply(data8, function(x) anova(aov(x$Labeled~x$Condition))$Pr[1]))
ANOVA=rep(ANOVA,1,each=length(unique(info$Condition)))
data_labeled <- spread(data_labeled, Exp, Labeled)
data_labeled <- cbind(data_labeled, ANOVA, 'Sig'=NA)
for (i in 1:nrow(data_labeled)){
if (data_labeled$ANOVA[i] == "NaN") data_labeled$Sig[i]=""
else if (data_labeled$ANOVA[i] <= 0.001) data_labeled$Sig[i]="***"
else if (data_labeled$ANOVA[i] <= 0.01) data_labeled$Sig[i]="**"
else if (data_labeled$ANOVA[i] <= 0.05) data_labeled$Sig[i]="*"
else data_labeled$Sig[i]=""
}
write.csv(data_labeled, 'labeled data.csv', row.names=F)
save(data_labeled, file='data_labeled.rdata')
plotname=paste(Title,"-plots.pdf", sep='')
pdf(file = plotname, width=14, height=10, pointsize=12)
bar("glyc_tot",length(unique(data4$Condition)))
bar("glyc_iso",length(unique(data4$Condition)))
bar("glyc_lab",length(unique(data4$Condition)))
bar("glyc_FC",length(unique(data4$Condition)))
bar("TCA_tot",length(unique(data4$Condition)))
bar("TCA_iso",length(unique(data4$Condition)))
bar("TCA_lab",length(unique(data4$Condition)))
bar("TCA_FC",length(unique(data4$Condition)))
bar("PPP_tot",length(unique(data4$Condition)))
bar("PPP_iso",length(unique(data4$Condition)))
bar("PPP_lab",length(unique(data4$Condition)))
bar("PPP_FC",length(unique(data4$Condition)))
bar("Curr_tot",length(unique(data4$Condition)))
bar("Curr_iso",length(unique(data4$Condition)))
bar("Curr_lab",length(unique(data4$Condition)))
bar("Curr_FC",length(unique(data4$Condition)))
bar("Cys_tot",length(unique(data4$Condition)))
bar("Cys_iso",length(unique(data4$Condition)))
bar("Cys_lab",length(unique(data4$Condition)))
bar("Cys_FC",length(unique(data4$Condition)))
bar("AA_tot",length(unique(data4$Condition)))
bar("AA_iso",length(unique(data4$Condition)))
bar("AA_lab",length(unique(data4$Condition)))
bar("AA_FC",length(unique(data4$Condition)))
bar("FA_tot",length(unique(data4$Condition)))
bar("FA_iso",length(unique(data4$Condition)))
bar("FA_lab",length(unique(data4$Condition)))
bar("FA_FC",length(unique(data4$Condition)))
bar("Hex_tot",length(unique(data4$Condition)))
bar("Hex_iso",length(unique(data4$Condition)))
bar("Hex_lab",length(unique(data4$Condition)))
bar("Hex_FC",length(unique(data4$Condition)))
bar("A_tot",length(unique(data4$Condition)))
bar("A_iso",length(unique(data4$Condition)))
bar("A_lab",length(unique(data4$Condition)))
bar("A_FC",length(unique(data4$Condition)))
bar("C_tot",length(unique(data4$Condition)))
bar("C_iso",length(unique(data4$Condition)))
bar("C_lab",length(unique(data4$Condition)))
bar("C_FC",length(unique(data4$Condition)))
bar("G_tot",length(unique(data4$Condition)))
bar("G_iso",length(unique(data4$Condition)))
bar("G_lab",length(unique(data4$Condition)))
bar("G_FC",length(unique(data4$Condition)))
bar("T_tot",length(unique(data4$Condition)))
bar("T_iso",length(unique(data4$Condition)))
bar("T_lab",length(unique(data4$Condition)))
bar("T_FC",length(unique(data4$Condition)))
bar("U_tot",length(unique(data4$Condition)))
bar("U_iso",length(unique(data4$Condition)))
bar("U_lab",length(unique(data4$Condition)))
bar("U_FC",length(unique(data4$Condition)))
dev.off()
save.image(paste(Title, '.rdata', sep=''))
# Principal Component Analysis (might want to re-order data columns)
a=1
b=2
pca=prcomp(t(data5), center=T, scale=T)
var_PCs=round(summary(pca)$imp[2,]*100,1)
PC.title=paste(Title,'-PCA Plots.pdf', sep='')
pdf(file = PC.title, width=14, height=10, pointsize=12)
plot(var_PCs[1:min(10, length(pca$sdev))], type='b', pch=20, col='blue', ylab='Variance explained (%)', xlab='Principal Component', main='Screeplot')
PCs=as.data.frame(pca$x)
PCs$Name=as.factor(rownames(PCs))
PCs$Name=factor(PCs$Name, levels=PCs$Name)
PCs=cbind(PCs, 'Condition'=samples$Condition, 'Sig'=factor(samples$Condition))
PCs$Sig=factor(PCs$Sig, levels=unique(samples$Condition))
PCs$Condition=factor(PCs$Condition, levels=unique(PCs$Condition))
color=colors
splom(PCs[,1:5], groups=PCs$Sig, par.settings=list(superpose.symbol=list(col=colors, pch=19)), auto.key=list(columns=4), pch=19)
plot=ggplot(PCs, aes(PCs[,a], PCs[,b], color=Condition, fill=Condition, label=Name))
plot+geom_point(size=4, shape=21, color='black')+scale_colour_manual(values = colors)+
labs(list(x=paste('PC',a, ' (',var_PCs[a],'%)',sep=''), y=paste('PC',b, ' (',var_PCs[b],'%)',sep=''), title=paste('PC',a,' vs. PC',b,': All samples', sep='')))+
theme_bw()+ theme(panel.grid.major=element_blank())+
scale_fill_manual('Condition', values=color)+
geom_text(color='black', fontface='bold', size=4, vjust=-0.2)
dev.off()
loadings=pca$rotation
write.csv(loadings,'Loadings.csv', row.names=T)
scores=pca$x
write.csv(scores, 'Scores.csv', row.names=T)
save(PCs, file='PCs.rdata')
LoadPC1 <- data.frame('Name'=rownames(loadings), 'Norm_Av'=loadings[,1])
LoadPC1 <- left_join(Abbrev, LoadPC1, by=c('Abb'='Name'))
LoadPC1 <- LoadPC1[,c('KEGG.ID','Norm_Av')]
LoadPC1$Norm_Av[is.na(LoadPC1$Norm_Av)] <- 0
write.csv(LoadPC1, 'LoadPC1-RelAmounts.pdf.csv', row.names=F)
LoadPC2 <- data.frame('Name'=rownames(loadings), 'Norm_Av'=loadings[,2])
LoadPC2 <- left_join(Abbrev, LoadPC2, by=c('Abb'='Name'))
LoadPC2 <- LoadPC2[,c('KEGG.ID','Norm_Av')]
LoadPC2$Norm_Av[is.na(LoadPC2$Norm_Av)] <- 0
write.csv(LoadPC2, 'LoadPC2-RelAmounts.pdf.csv', row.names=F)
data9 <- data3 %>%
filter(ANOVA <= 0.05) %>%
select(Name, Condition, Iso, contains('MID')) %>%
gather(Exp, Value, -Name, -Condition, -Iso) %>%
arrange(Name, Condition) %>%
#mutate(Condition_Exp = Condition:Exp, Condition=NULL, Exp=NULL) %>%
#mutate(Name_Iso = Name:Iso, Name=NULL, Iso=NULL) %>%
unite(Condition_Exp, c(Condition, Exp), sep='_') %>%
mutate(Condition_Exp=factor(Condition_Exp, levels=unique(Condition_Exp))) %>%
unite(Name_Iso, c(Name, Iso), sep='_') %>%
spread(Condition_Exp, Value)
data9 <- data9[,!(colSums(data9[2:length(data9)], na.rm=T)==0)]
data9 <- data9[!(rowSums(data9[2:length(data9)], na.rm=T)==0),]
data5=as.matrix(data9[2:length(data9)])
rownames(data5) <- data9$Name
ann=data.frame(cbind("Condition"=samples['Condition'], 'Norvaline'=Norv[,1],'Cell Number'=numbers))
Norv.color = c("white", "blue")
Cell.Number.color= c("white", "green")
Cond.colors=colors[1:length(unique(data4$Condition))]
names(Cond.colors)=unique(samples$Condition)
ann_colors = list(Condition=Cond.colors, Norvaline = Norv.color, Cell.Number = Cell.Number.color)
rownames(ann)=colnames(data5)
write.csv(data5, file="heatmap data isotopomers.csv", row.names=T)
heatmap.title=paste(Title, "-All-Clustered Heatmap-Isotopomer.pdf", sep='')
dev.off()
heat.color=normal
pheatmap(data5, cluster_row=T, cluster_col=T, clustering_distance_rows='correlation', clustering_distance_cols='correlation',
color = colorRampPalette(heat.color)(100), border_color="black", scale="row",
cellwidth = 20, cellheight = 10, annotation=ann, annotation_colors = ann_colors, show_colnames = F,
main=Title, filename=heatmap.title)
dev.off()
# Principal Component Analysis including Isotopomers (might want to re-order data columns)
a=1
b=2
pca=prcomp(t(data5), center=T, scale=T)
var_PCs=round(summary(pca)$imp[2,]*100,1)
PC.title=paste(Title,'-PCA Plots-Isotopomer.pdf', sep='')
pdf(file = PC.title, width=14, height=10, pointsize=12)
plot(var_PCs[1:min(10, length(pca$sdev))], type='b', pch=20, col='blue', ylab='Variance explained (%)', xlab='Principal Component', main='Screeplot')
PCs=as.data.frame(pca$x)
PCs$Name=as.factor(rownames(PCs))
PCs$Name=factor(PCs$Name, levels=PCs$Name)
PCs=cbind(PCs, 'Condition'=samples$Condition, 'Sig'=factor(samples$Condition))
PCs$Sig=factor(PCs$Sig, levels=unique(PCs$Sig))
PCs$Condition=factor(PCs$Condition, levels=unique(PCs$Condition))
color=colors
splom(PCs[,1:5], groups=PCs$Sig, par.settings=list(superpose.symbol=list(col=colors, pch=19)), auto.key=list(columns=4), pch=19)
plot=ggplot(PCs, aes(PCs[,a], PCs[,b], color=Condition, label=Name))
plot+geom_point(size=4, shape=21, color='black')+scale_colour_manual(values = colors)+
labs(list(x=paste('PC',a, ' (',var_PCs[a],'%)',sep=''), y=paste('PC',b, ' (',var_PCs[b],'%)',sep=''), title=paste('PC',a,' vs. PC',b,': All samples', sep='')))+
theme_bw()+ theme(panel.grid.major=element_blank())+
scale_fill_manual('Condition', values=color)+
geom_text(color='black', fontface='bold', size=4, vjust=-0.2)
dev.off()
loadings=pca$rotation
write.csv(loadings,'Loadings-Isotopomers.csv', row.names=T)
scores=pca$x
write.csv(scores, 'Scores-Isotopomers.csv', row.names=T)
save(PCs, file='PCs.rdata')
str(data_labeled)
data9 <- data_labeled %>%
filter(ANOVA <= 0.05) %>%
select(Name, Condition, contains('Labeled')) %>%
gather(Exp, Value, -Name, -Condition) %>%
arrange(Name, Condition) %>%
#mutate(Condition_Exp = Condition:Exp, Condition=NULL, Exp=NULL) %>%
unite(Condition_Exp, c(Condition, Exp), sep='_') %>%
mutate(Condition_Exp=factor(Condition_Exp, levels=unique(Condition_Exp))) %>%
spread(Condition_Exp, Value)
data9 <- data9[,!(colSums(data9[2:length(data9)], na.rm=T)==0)]
data9 <- data9[!(rowSums(data9[2:length(data9)], na.rm=T)==0),]
data5=as.matrix(data9[2:length(data9)])
rownames(data5) <- data9$Name
ann=data.frame(cbind("Condition"=samples['Condition'], 'Norvaline'=Norv[,1],'Cell Number'=numbers))
Norv.color = c("white", "blue")
Cell.Number.color= c("white", "green")
Cond.colors=colors[1:length(unique(data4$Condition))]
names(Cond.colors)=unique(samples$Condition)
ann_colors = list(Condition=Cond.colors, Norvaline = Norv.color, Cell.Number = Cell.Number.color)
rownames(ann)=colnames(data5)
write.csv(data5, file="heatmap data percent labeled.csv", row.names=T)
heatmap.title=paste(Title, "-All-Clustered Heatmap-percent labeled.pdf", sep='')
dev.off()
heat.color=normal
pheatmap(data5, cluster_row=T, cluster_col=T, clustering_distance_rows='correlation', clustering_distance_cols='correlation',
color = colorRampPalette(heat.color)(100), border_color="black", scale="row",
cellwidth = 20, cellheight = 10, annotation=ann, annotation_colors = ann_colors, show_colnames = F,
main=Title, filename=heatmap.title)
dev.off()
a=1
b=2
pca=prcomp(t(data5), center=T, scale=T)
var_PCs=round(summary(pca)$imp[2,]*100,1)
PC.title=paste(Title,'-PCA Plots-percent labeled.pdf', sep='')
pdf(file = PC.title, width=14, height=10, pointsize=12)
plot(var_PCs[1:min(10, length(pca$sdev))], type='b', pch=20, col='blue', ylab='Variance explained (%)', xlab='Principal Component', main='Screeplot')
PCs=as.data.frame(pca$x)
PCs$Name=as.factor(rownames(PCs))
PCs$Name=factor(PCs$Name, levels=PCs$Name)
PCs=cbind(PCs, 'Condition'=samples$Condition, 'Sig'=factor(samples$Condition))
PCs$Sig=factor(PCs$Sig, levels=unique(samples$Condition))
PCs$Condition=factor(PCs$Condition, levels=unique(PCs$Condition))
color=colors
splom(PCs[,1:5], groups=PCs$Sig, par.settings=list(superpose.symbol=list(col=colors, pch=19)), auto.key=list(columns=4), pch=19)
plot=ggplot(PCs, aes(PCs[,a], PCs[,b], color=Condition, label=Name))
plot+geom_point(size=4, shape=21, color='black')+scale_colour_manual(values = colors)+
labs(list(x=paste('PC',a, ' (',var_PCs[a],'%)',sep=''), y=paste('PC',b, ' (',var_PCs[b],'%)',sep=''), title=paste('PC',a,' vs. PC',b,': All samples', sep='')))+
theme_bw()+ theme(panel.grid.major=element_blank())+
scale_fill_manual('Condition', values=color)+
geom_text(color='black', fontface='bold', size=4, vjust=-0.2)
dev.off()
loadings=pca$rotation
write.csv(loadings,'Loadings-percent labeled.pdf.csv', row.names=T)
scores=pca$x
write.csv(scores, 'Scores-percent labeled.pdf.csv', row.names=T)
save(PCs, file='PCs.rdata')
LoadPC1 <- data.frame('Name'=rownames(loadings), 'Norm_Av'=loadings[,1])
LoadPC1 <- left_join(Abbrev, LoadPC1, by=c('Abb'='Name'))
LoadPC1 <- LoadPC1[,c('KEGG.ID','Norm_Av')]
LoadPC1$Norm_Av[is.na(LoadPC1$Norm_Av)] <- 0
write.csv(LoadPC1, 'LoadPC1-Percent_labeled.pdf.csv', row.names=F)
LoadPC2 <- data.frame('Name'=rownames(loadings), 'Norm_Av'=loadings[,2])
LoadPC2 <- left_join(Abbrev, LoadPC2, by=c('Abb'='Name'))
LoadPC2 <- LoadPC2[,c('KEGG.ID','Norm_Av')]
LoadPC2$Norm_Av[is.na(LoadPC2$Norm_Av)] <- 0
write.csv(LoadPC2, 'LoadPC2-Percent_labeled.pdf.csv', row.names=F)
keggGet('NADPH')
rm(list=ls())
setwd("C:/Users/dbraas/Git/Metabolomics")
list.files()
metab <- read.csv('list of metabolites.csv', header=T)
metab[1:6,1:6]
names(metab)
select(metab, Compound, Filename, Expected.RT,  Actual.RT, Area, Formula,m.z..Apex.) %>% head()
metab <- select(metab, Compound, Filename, Expected.RT,  Actual.RT, Area, Formula,m.z..Apex.) %>% head()
metab %>% group_by(Compound) %>% summarize(Expected.RT=mean(Expected.RT, na.rm=T), Actual.RT=mean(Actual.RT, na.rm=T), Formula=Formula, m.z=mean(m.z..Apex.)) %>% head()
metab %>% group_by(Compound) %>% mutate(Expected.RT=mean(Expected.RT, na.rm=T), Actual.RT=mean(Actual.RT, na.rm=T), Formula=Formula, m.z=mean(m.z..Apex.)) %>% head()
metab %>% group_by(Compound) %>% mutate(Expected.RT=mean(Expected.RT, na.rm=T), Actual.RT=mean(Actual.RT, na.rm=T), Area=mean(Area, na.rm=T), Formula=Formula, m.z=mean(m.z..Apex.)) %>% distinct() %>% head()
str(metab)
data <- metab
ata$Compound = as.character(data$Compound)
for (i in 1:length(data$Compound)){                   #loop through IDs and fill up with Ms
if (grepl(" M[0-9]+$", data$Compound[i])==FALSE) data$Compound[i]=paste(data$Compound[i],"M0")}
Name <- gsub(" M[0-9]+$", "", data$Compound)
name_split <- regexpr("M[0-9]+$",data$Compound)
Iso <-regmatches(data$Compound, name_split)
data <- data.frame(Name, Iso, data[,2:length(data)])
data$Iso <- factor(data$Iso, levels=as.character(unique(data$Iso)))
data$Compound = as.character(data$Compound)
for (i in 1:length(data$Compound)){                   #loop through IDs and fill up with Ms
if (grepl(" M[0-9]+$", data$Compound[i])==FALSE) data$Compound[i]=paste(data$Compound[i],"M0")}
Name <- gsub(" M[0-9]+$", "", data$Compound)
name_split <- regexpr("M[0-9]+$",data$Compound)
Iso <-regmatches(data$Compound, name_split)
data <- data.frame(Name, Iso, data[,2:length(data)])
data$Iso <- factor(data$Iso, levels=as.character(unique(data$Iso)))
head(data)
data <- metab
data[1:6,1:6]
data$Compound = as.character(data$Compound)
for (i in 1:length(data$Compound)){                   #loop through IDs and fill up with Ms
if (grepl(" M[0-9]+$", data$Compound[i])==FALSE) data$Compound[i]=paste(data$Compound[i],"M0")}
Name <- gsub(" M[0-9]+$", "", data$Compound)
name_split <- regexpr("M[0-9]+$",data$Compound)
Iso <-regmatches(data$Compound, name_split)
data <- data.frame(Name, Iso, data[,2:length(data)])
data[1:6,1:6]
data$Iso <- factor(data$Iso, levels=as.character(unique(data$Iso)))
data %>% group_by(Name) %>% filtr(Iso=='M0', Filename != 'blank') %>% summarise(Expected.RT=mean(Expected.RT, na.rm=T), Actual.RT=mean(Actual.RT, na.rm=T), Area=mean(Area, na.rm=T), Formula=Formula) %>% head()
data %>% group_by(Name) %>% filter(Iso=='M0', Filename != 'blank') %>% summarise(Expected.RT=mean(Expected.RT, na.rm=T), Actual.RT=mean(Actual.RT, na.rm=T), Area=mean(Area, na.rm=T), Formula=Formula) %>% head()
data %>% group_by(Name) %>% filter(Iso=='M0', Filename != 'blank') %>% mutate(Expected.RT=mean(Expected.RT, na.rm=T), Actual.RT=mean(Actual.RT, na.rm=T), Area=mean(Area, na.rm=T), Formula=Formula) %>% head()
metab <- data %>% group_by(Name) %>% filter(Iso=='M0', Filename != 'blank') %>% summarise(Expected.RT=mean(Expected.RT, na.rm=T), Actual.RT=mean(Actual.RT, na.rm=T), Area=mean(Area, na.rm=T), Formula=Formula)
metab <- data %>% group_by(Name) %>% filter(Iso=='M0', Filename != 'blank') %>% mutate(Expected.RT=mean(Expected.RT, na.rm=T), Actual.RT=mean(Actual.RT, na.rm=T), Area=mean(Area, na.rm=T), Formula=Formula)
head(memetab)
head(metab)
metab <- data %>% group_by(Name) %>% filter(Iso=='M0', Filename != 'blank') %>% mutate(Expected.RT=mean(Expected.RT, na.rm=T), Actual.RT=mean(Actual.RT, na.rm=T), Area=mean(Area, na.rm=T), m.z=mean(m.z..Apex., na.rm=T),Formula=Formula)
head(metab)
metab <- data %>% group_by(Name) %>% filter(Iso=='M0', Filename != 'blank') %>% mutate(Expected.RT=mean(Expected.RT, na.rm=T), Actual.RT=mean(Actual.RT, na.rm=T), Area=mean(Area, na.rm=T), m.z=mean(m.z..Apex., na.rm=T),Formula=Formula) %>% filter(Filename=='AK-001')
head(metab)
metab <- data %>% group_by(Name) %>% filter(Iso=='M0', Filename != 'blank') %>% mutate(Expected.RT=mean(Expected.RT, na.rm=T), Actual.RT=mean(Actual.RT, na.rm=T), Area=mean(Area, na.rm=T), m.z=mean(m.z..Apex., na.rm=T),Formula=Formula)
head(metab)
metab$Filename <- NULL %>% distinct() %>% head()
metab$Filename <- NULL
metab$Filename <- NULL %>% distinct() %>% head()
head(metab)
metab$Iso <- NULL
distinct(metab) %>% head()
list.files()
metab <- read.csv('list of metabolites.csv', header=T)
names(metab)
metab <- select(metab, Compound, Filename, m.z..Apex., Expected.RT, Actual.RT, Area)
head(metab)
metab <- read.csv('list of metabolites.csv', header=T)
metab <- select(metab, Compound, Filename, m.z..Apex., Expected.RT, Actual.RT, Area, Formula)
head(metab)
data <- metab
data$Compound = as.character(data$Compound)
for (i in 1:length(data$Compound)){                   #loop through IDs and fill up with Ms
if (grepl(" M[0-9]+$", data$Compound[i])==FALSE) data$Compound[i]=paste(data$Compound[i],"M0")}
Name <- gsub(" M[0-9]+$", "", data$Compound)
name_split <- regexpr("M[0-9]+$",data$Compound)
Iso <-regmatches(data$Compound, name_split)
data <- data.frame(Name, Iso, data[,2:length(data)])
data$Iso <- factor(data$Iso, levels=as.character(unique(data$Iso)))
head(data)
data %>%
filter(Iso=='M0') %>%
group_by(Name) %>%
summarise(MZ=mean(m.z..Apex., na.rm=T))
data %>%
filter(Iso=='M0') %>%
group_by(Name) %>%
summarise(MZ=mean(m.z..Apex., na.rm=T),
Expected.RT=mean(Expected.RT, na.rm=T))
unique(data$Filename)
data %>%
filter(Iso=='M0', Filename != 'blank') %>%
group_by(Name) %>%
summarise(MZ=mean(m.z..Apex., na.rm=T),
Expected.RT=mean(Expected.RT, na.rm=T),
Actual.RT=mean(Actual.RT, na.rm=T),
Area=mean(Area, na.rm=T),
Formula=Formula)
data %>%
filter(Iso=='M0', Filename != 'blank') %>%
group_by(Name) %>%
summarise(MZ=mean(m.z..Apex., na.rm=T),
Expected.RT=mean(Expected.RT, na.rm=T),
Actual.RT=mean(Actual.RT, na.rm=T),
Area=mean(Area, na.rm=T))
distinct(data, formula())
distinct(data, Formula)
data %>%
filter(Iso=='M0', Filename != 'blank') %>%
group_by(Name) %>%
summarise(MZ=mean(m.z..Apex., na.rm=T),
Expected.RT=mean(Expected.RT, na.rm=T),
Actual.RT=mean(Actual.RT, na.rm=T),
Area=mean(Area, na.rm=T),
Formula=distinct(Formula))
data %>%
filter(Iso=='M0', Filename != 'blank') %>%
group_by(Name) %>%
summarise(MZ=mean(m.z..Apex., na.rm=T),
Expected.RT=mean(Expected.RT, na.rm=T),
Actual.RT=mean(Actual.RT, na.rm=T),
Area=mean(Area, na.rm=T),
Formula=unique(Formula))
metab <- data %>%
filter(Iso=='M0', Filename != 'blank') %>%
group_by(Name) %>%
summarise(MZ=mean(m.z..Apex., na.rm=T),
Expected.RT=mean(Expected.RT, na.rm=T),
Actual.RT=mean(Actual.RT, na.rm=T),
Area=mean(Area, na.rm=T),
Formula=unique(Formula))
head(metab)
metab <- data %>%
filter(Iso=='M0', Filename != 'blank') %>%
group_by(Name) %>%
summarise(MZ=mean(m.z..Apex., na.rm=T),
Expected.RT=mean(Expected.RT, na.rm=T),
Actual.RT=round(mean(Actual.RT, na.rm=T),1),
Area=mean(Area, na.rm=T),
Formula=unique(Formula))
head(metab)
metab$Area <- NULL
write.csv('list of metabolites.csv')
write.csv(meatb, 'list of metabolites.csv')
write.csv(metab, 'list of metabolites.csv')
list.files()
metab <- read.csv('all data raw.csv', header=T)
names(metab)
metab <- select(metab, Compound, Filename, Formula, Adduct, m.z..Apex., Expected.RT, Actual.RT)
head(metab)
names(data)
data <- metab
data$Compound = as.character(data$Compound)
for (i in 1:length(data$Compound)){                   #loop through IDs and fill up with Ms
if (grepl(" M[0-9]+$", data$Compound[i])==FALSE) data$Compound[i]=paste(data$Compound[i],"M0")}
Name <- gsub(" M[0-9]+$", "", data$Compound)
name_split <- regexpr("M[0-9]+$",data$Compound)
Iso <-regmatches(data$Compound, name_split)
data <- data.frame(Name, Iso, data[,2:length(data)])
data$Iso <- factor(data$Iso, levels=as.character(unique(data$Iso)))
metab <- data %>%
filter(Iso=='M0', Filename != 'blank') %>%
group_by(Name) %>%
summarise(MZ=mean(m.z..Apex., na.rm=T),
Expected.RT=mean(Expected.RT, na.rm=T),
Actual.RT=round(mean(Actual.RT, na.rm=T),1),
Area=mean(Area, na.rm=T),
Formula=unique(Formula))
metab <- data %>%
filter(Iso=='M0', Filename != 'blank') %>%
group_by(Name) %>%
summarise(MZ=mean(m.z..Apex., na.rm=T),
Expected.RT=mean(Expected.RT, na.rm=T),
Actual.RT=round(mean(Actual.RT, na.rm=T),1),
Adduct=unique(Adduct),
Formula=unique(Formula))
head(data)
metab <- data %>%
filter(Iso=='M0', Filename != 'blank') %>%
group_by(Name) %>%
summarise(MZ=mean(m.z..Apex., na.rm=T),
Expected.RT=mean(Expected.RT, na.rm=T),
Actual.RT=round(mean(Actual.RT, na.rm=T),1),
Adduct=Adduct,
Formula=unique(Formula))
metab <- data %>%
filter(Iso=='M0', Filename != 'blank') %>%
group_by(Name) %>%
mutate(MZ=mean(m.z..Apex., na.rm=T),
Expected.RT=mean(Expected.RT, na.rm=T),
Actual.RT=round(mean(Actual.RT, na.rm=T),1))
head(metab)
metab <- data %>%
filter(Iso=='M0', Filename != 'blank') %>%
group_by(Name) %>%
mutate(MZ=mean(m.z..Apex., na.rm=T),
Expected.RT=mean(Expected.RT, na.rm=T),
Actual.RT=round(mean(Actual.RT, na.rm=T),1)) %>%
filter(Filename=='AK-001')
head(metab)
metab <- data %>%
filter(Iso=='M0', Filename != 'blank') %>%
group_by(Name) %>%
mutate(MZ=mean(m.z..Apex., na.rm=T),
Expected.RT=mean(Expected.RT, na.rm=T),
Actual.RT=round(mean(Actual.RT, na.rm=T),1)) %>%
filter(Filename=='AK-001') %>%
mutate(Iso = NULL, Filename = NULL)
head(metab)
metab <- data %>%
filter(Iso=='M0', Filename != 'blank') %>%
group_by(Name) %>%
mutate(MZ=mean(m.z..Apex., na.rm=T),
Expected.RT=mean(Expected.RT, na.rm=T),
Actual.RT=round(mean(Actual.RT, na.rm=T),1)) %>%
filter(Filename=='AK-001') %>%
mutate(Iso = NULL, Filename = NULL, m.z..Apex.=NULL) %>%
select(Name, Formula, Adduct, MZ, Expected.RT, Actual.RT)
head(metab)
write.csv(metab, 'list of metabolites.csv')
